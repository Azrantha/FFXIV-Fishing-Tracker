@{
    Layout = "~/_SiteLayout.cshtml";
    var userName = WebSecurity.CurrentUserName;
    var db = Database.Open("StarterSite");
    if (UrlData.Count != 1)
    {
        Response.Redirect("~/Default.cshtml");
    }
    var locationId = UrlData.ElementAt(0);
    var userId = -1;
    var selectFishByLocationQuery = "";
    if (WebSecurity.IsAuthenticated)
    {
        //store the userId to prevent multiple queries being run unnecessarily.
        userId = db.Query("SELECT userId from UserProfile where Email = '" + userName + "'").ElementAt(0).UserId;
        selectFishByLocationQuery = "SELECT fish.fishId, fish.fishName, fish.fishLevel, fish.fishDescription, fish.fishPatch, " +
            "fish.fishEorzeaDBLink, user_fish_junction.caught, location.locationName, location.locationId, map.mapName, map.mapId " +
            "FROM fish INNER JOIN user_fish_junction ON fish.fishId = user_fish_junction.fishId INNER JOIN location_fish_junction " +
            "ON fish.fishId = location_fish_junction.fishId INNER JOIN location ON location.locationId = " +
            "location_fish_junction.locationId INNER JOIN map ON location.mapId = map.mapId " +
            "WHERE user_fish_junction.userId = " + userId + " AND location.locationId = " + locationId;
    }
    else
    {
        selectFishByLocationQuery = "SELECT fish.fishId, fish.fishName, fish.fishLevel, fish.fishDescription, fish.fishPatch, " +
            "fish.fishEorzeaDBLink, CAST(0 as bit) as caught, location.locationName, location.locationId, map.mapName, map.mapId " +
            "FROM fish INNER JOIN user_fish_junction ON fish.fishId = user_fish_junction.fishId INNER JOIN location_fish_junction " +
            "ON fish.fishId = location_fish_junction.fishId INNER JOIN location ON location.locationId = " +
            "location_fish_junction.locationId INNER JOIN map ON location.mapId = map.mapId " +
            "WHERE location.locationId = " + locationId;
    }

    Console.Write(selectFishByLocationQuery);
    var dbResults = db.Query(selectFishByLocationQuery);
    var location = dbResults.ElementAt(0);
    Page.Title = location.locationName;

    var saveCaughtFishStatement = "";
    var saveNotCaughtFishStatement = "";
    if (IsPost && WebSecurity.IsAuthenticated)
    {
        // -1 at the start of each ID to ensure the SQL is valid, -1 was chosen as it is an impossible ID, so will have no effect on the query itself.
        saveCaughtFishStatement = "UPDATE user_fish_junction SET caught = 1 WHERE userId = " + userId + " AND fishId IN (-1";
        saveNotCaughtFishStatement = "UPDATE user_fish_junction SET caught = 0 WHERE userId = " + userId + " AND fishId IN (-1";
        for (int i = 0; i < Request.Form.Count; i++)
        {
            //"Caught, row" means caught=true, otherwise will just return "row", this is a result of having a second invisible checkbox
            // (row) permanently checked, as a workaround for unchecked checkboxes not returning in forms.
            if (Request.Form[i] == "Caught,row")
                {
                    saveCaughtFishStatement += "," + Request.Form.AllKeys[i];
                }
                else
                {
                    saveNotCaughtFishStatement += "," + Request.Form.AllKeys[i];
                }
        }
        saveCaughtFishStatement += ")";
        saveNotCaughtFishStatement += ")";
        db.Execute(saveCaughtFishStatement);
        db.Execute(saveNotCaughtFishStatement);
        Response.Redirect(Request.RawUrl); //To ensure the page reloads with updated database information.
    }
}

@section featured {
    <section class="featured">
        <div class="content-wrapper">
            <div class="title">
                <div class="float-left">
                    <h1>Location: <a href="@Request.RawUrl">@Page.Title.</a></h1>
                </div>
                <div class="float-right">
                    <h2>Map: <a href="~/Maps/@location.mapId">@location.mapName.</a></h2>
                </div>
                <div class="body"></div>
            </div>
        </div>
    </section>
}
<form method="post">
    <table id="fishTable">
        <thead>
            <tr>
                <th>Name</th>
                <th>Level</th>
                <th>Description</th>
                <th>Patch</th>
                <th>Caught</th>
                <th>Eorzea DB tooltip</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var row in dbResults)
        {
                <tr @(row.caught ? "class=\"fishRow caught\"" : "class=\"fishRow\"") id="@row.fishId" patch="@row.fishPatch">
                    <td class="fishNameRow"><a href="~/fish/@row.fishId">@row.fishName</a></td>
                    <td class="fishLevelRow">@row.fishLevel</td>
                    <td class="fishDescriptionRow">@row.fishDescription</td>
                    <td class="fishPatchRow">@row.fishPatch</td>
                    @if (row.caught)
                    {
                        <td><input type="checkbox" class="fishRowCaught" name="@row.fishId" value="Caught" checked="checked" /><input type="hidden" name="@row.fishId" value="row" /></td>
                    }
                    else
                    {
                        <td><input type="checkbox" class="fishRowCaught" name="@row.fishId" value="Caught" /><input type="hidden" name="@row.fishId" value="row" /></td>
                    }
                    <td class="fishEorzeaDBLink"><a href="@row.fishEorzeaDBLink" class="eorzeadb_link">tooltip</a></td>
                </tr>
            }
        </tbody>
    </table>
    @if (WebSecurity.IsAuthenticated)
        {
        <button type="submit" value="Submit" class="submit">Save Caught Status</button>
    }
</form>